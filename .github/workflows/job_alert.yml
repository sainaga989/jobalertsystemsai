name: Job Alert System

on:
  schedule:
    # Runs every 6 hours (adjust as needed using cron syntax)
    # Example: "0 */6 * * *" means at minute 0, every 6th hour.
    # Check crontab.guru for more options: https://crontab.guru/
    - cron: '0 */6 * * *'
  workflow_dispatch:
    # Allows you to manually trigger the workflow from the GitHub UI

jobs:
  run_alerter:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Use the latest Python 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Job Alerter
      env:
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
      run: |
        # This creates an empty log file if it doesn't exist.
        # IMPORTANT: GitHub Actions runners are ephemeral.
        # The 'sent_jobs.json' log *will not persist* across different runs.
        # This means the script will re-evaluate all jobs on each run.
        # If you need to avoid duplicate alerts across runs, you'll need
        # a persistent storage solution (e.g., GitHub Gist, a small cloud DB).
        # For this basic setup, it will prevent duplicates *within* a single run.
        touch sent_jobs.json
        python job_alerter.py
